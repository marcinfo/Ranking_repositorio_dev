# Generated by Django 4.2.4 on 2023-11-17 12:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='tb_dados_contrato',
            fields=[
                ('atualizado', models.DateTimeField(auto_now=True, null=True, verbose_name='Atualizado em:')),
                ('ativo', models.CharField(choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], default='SIM', max_length=3, verbose_name='Ativo?')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('r_m', models.CharField(choices=[('Interior/Litoral', 'Interior/Litoral'), ('M', 'Metropolitana')], max_length=20, verbose_name='Metropolitana/Interior')),
                ('inserido', models.DateTimeField(auto_now_add=True, verbose_name='Inserido em')),
                ('cadastrado_por', models.CharField(max_length=100, verbose_name='Cadastrado Por')),
                ('unidade', models.CharField(max_length=10, verbose_name='Inserido em')),
                ('numemro_contrato', models.CharField(max_length=10, unique=True, verbose_name='Número do Contrato')),
                ('nome_contratada', models.CharField(max_length=100, verbose_name='Nome da Contratada')),
                ('gestor_1', models.CharField(max_length=100, verbose_name='Gestor do Contrato 1')),
                ('gestor_2', models.CharField(max_length=100, verbose_name='Gestor do Contrato 2')),
                ('resp_contratada', models.CharField(max_length=100, verbose_name='Responsavel Pela Contratada')),
                ('administrador', models.CharField(max_length=100, verbose_name='Administrador do Contrato')),
                ('superintendente', models.CharField(max_length=100, verbose_name='Surperintendente')),
                ('data_inicio', models.DateField(verbose_name='Data de Inicio do Contrato')),
                ('data_fim', models.DateField(verbose_name='Data de Fim do Contrato')),
                ('staff_1', models.CharField(max_length=100)),
                ('staff_2', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Tabela Dados do Contrato',
                'verbose_name_plural': 'Tabela Dados dos Contratos',
            },
        ),
        migrations.CreateModel(
            name='tb_log_email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inserido', models.DateTimeField(auto_now_add=True, verbose_name='Inserido em:')),
                ('inicio_envio', models.CharField(max_length=35, verbose_name='Inicio do envio do e-mail')),
                ('fim_envio', models.CharField(max_length=35, verbose_name='Fim do envio do e-mail')),
                ('total_enderecos', models.CharField(max_length=35, verbose_name='Quantidade de endereços selecionados')),
                ('total_de_envio', models.CharField(max_length=35, verbose_name='Quantidade de emails enviados')),
                ('tempo_envio', models.CharField(blank=True, max_length=9, null=True, verbose_name='tempo de execução')),
                ('status_tarefa', models.CharField(max_length=35, verbose_name='Status da tarefa')),
            ],
            options={
                'verbose_name': 'Tabela log de emil',
                'verbose_name_plural': 'Tabela log de emils',
            },
        ),
        migrations.CreateModel(
            name='tb_modalidade_interior',
            fields=[
                ('inserido', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Inserido em:')),
                ('atualizado', models.DateTimeField(auto_now=True, null=True, verbose_name='Atualizado em:')),
                ('ativo', models.CharField(choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], default='SIM', max_length=3, verbose_name='Ativo?')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mes_ano_referencia', models.CharField(max_length=20)),
                ('inserido_por', models.CharField(max_length=100)),
                ('contrato', models.CharField(max_length=20)),
                ('idg_interior', models.DecimalField(decimal_places=2, help_text='Índice de Desempenho Global', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('servicos_arsesp', models.DecimalField(decimal_places=2, help_text='Serviços Atendidos No Prazo ARSESP', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_redes', models.DecimalField(decimal_places=2, help_text='Total de Redes executadas.', max_digits=7)),
                ('total_cadastro_entregue', models.DecimalField(decimal_places=2, help_text='Total de CADASTRO entregue.', max_digits=7)),
                ('entrega_cadastro', models.DecimalField(decimal_places=2, help_text='Entrega do Cadastro E Imobilização', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('quantidade_colaboradores', models.IntegerField(help_text='quantidade de colaboradores no contrato', verbose_name='Quantidade de colaboradores')),
                ('quantidade_acidentes', models.IntegerField(help_text='Quantidade de acidentes', verbose_name='Quantidade de acidentes')),
                ('acidente_trabalho', models.DecimalField(decimal_places=2, help_text='indicador de acidentes', max_digits=5)),
                ('justificativa', models.TextField(blank=True, max_length=500)),
            ],
            options={
                'verbose_name': 'Tabela de Indicador Contrato Interior',
                'verbose_name_plural': 'Tabela de Indicadores Contratos Interior',
            },
        ),
        migrations.CreateModel(
            name='tb_modalidade_metropolitana',
            fields=[
                ('inserido', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Inserido em:')),
                ('atualizado', models.DateTimeField(auto_now=True, null=True, verbose_name='Atualizado em:')),
                ('ativo', models.CharField(choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], default='SIM', max_length=3, verbose_name='Ativo?')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mes_ano_referencia', models.CharField(editable=False, max_length=20)),
                ('inserido_por', models.CharField(editable=False, max_length=100)),
                ('contrato', models.CharField(max_length=20)),
                ('idg', models.DecimalField(decimal_places=2, help_text='INDICE DE DESEMPENHO GLOBAL ', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('isap', models.DecimalField(decimal_places=2, help_text='SERVIÇOS ATENDIDOS NO PRAZO (ISAP)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ida', models.DecimalField(decimal_places=2, help_text='INDICE DE DESEMPENHO NA ÁGUA (IDA)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ide', models.DecimalField(decimal_places=2, help_text='INDICE DE DESEMPENHO NA ESGOTO(IDE)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('idr', models.DecimalField(decimal_places=2, help_text='INDICE DE DESEMPENHO REPOSIÇÃO (IDR)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_redes', models.DecimalField(decimal_places=2, help_text='Total de Redes executadas em metros.', max_digits=7, verbose_name='Metros de rede executadas')),
                ('total_cadastro_entregue', models.DecimalField(decimal_places=2, help_text='Total de CADASTRO entregue.', max_digits=7)),
                ('entrega_cadastro', models.DecimalField(decimal_places=2, help_text='ENTREGA DO CADASTRO E IMOBILIZAÇÃO', max_digits=5)),
                ('quantidade_colaboradores', models.IntegerField(help_text='quantidade de colaboradores no contrato', verbose_name='Quantidade de colaboradores')),
                ('quantidade_acidentes', models.IntegerField(help_text='Quantidade de acidentes', verbose_name='Quantidade de acidentes')),
                ('seg_capacitacao', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='SEGURANÇA E CAPACITAÇÃO')),
                ('justificativa', models.TextField(blank=True, max_length=500, verbose_name='Justifique os indicadores informados.')),
            ],
            options={
                'verbose_name': 'Tabela de Indicador Contrato Metropolitana',
                'verbose_name_plural': 'Tabela de Indicadores Contratos Metropolitana',
            },
        ),
        migrations.CreateModel(
            name='tb_premio_excel',
            fields=[
                ('inserido', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Inserido em:')),
                ('atualizado', models.DateTimeField(auto_now=True, null=True, verbose_name='Atualizado em:')),
                ('ativo', models.CharField(choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], default='SIM', max_length=3, verbose_name='Ativo?')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mes_ref', models.CharField(max_length=7, verbose_name='Mes de Referencia')),
                ('modalidade', models.CharField(max_length=100, verbose_name='Modalidade')),
                ('colocacao', models.IntegerField(verbose_name='Colocação')),
                ('indicador', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Indicador inteiro')),
                ('contrato', models.CharField(max_length=10)),
                ('fornecedor', models.CharField(max_length=100, verbose_name='Fornecedor')),
                ('gestores', models.CharField(max_length=150, verbose_name='Gestor(es)')),
                ('superintendencia', models.CharField(max_length=5, verbose_name='Superintendencia')),
                ('casas_decimais', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Indicador')),
                ('original', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Indicador')),
                ('OS_fotos', models.IntegerField(verbose_name='Ordens sem fotos')),
                ('serv_2_min', models.IntegerField(verbose_name='Serviços em 2 minutos')),
            ],
            options={
                'verbose_name': 'Tabela indicador excel',
                'verbose_name_plural': 'Tabela indicadores excel',
            },
        ),
        migrations.CreateModel(
            name='tb_referencia_contrato',
            fields=[
                ('inserido', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Inserido em:')),
                ('atualizado', models.DateTimeField(auto_now=True, null=True, verbose_name='Atualizado em:')),
                ('ativo', models.CharField(choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], default='SIM', max_length=3, verbose_name='Ativo?')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('resp_preenchimento', models.CharField(max_length=100)),
                ('mes_ano_referencia', models.CharField(blank=True, max_length=100)),
                ('unidade', models.CharField(blank=True, max_length=20, null=True)),
                ('contrato', models.CharField(blank=True, max_length=20)),
                ('administrador', models.CharField(blank=True, max_length=100, null=True)),
                ('superintendente', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=30)),
                ('data_hora_preenchimento', models.CharField(blank=True, max_length=20)),
                ('staf_1', models.CharField(blank=True, max_length=20)),
                ('staf_2', models.CharField(blank=True, max_length=20)),
                ('data_inicio', models.DateField(blank=True, null=True)),
                ('data_fim', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tabela Mês/Ano Referencia',
                'verbose_name_plural': 'Tabela Mês/Ano Referencias',
            },
        ),
        migrations.CreateModel(
            name='tb_unidades',
            fields=[
                ('atualizado', models.DateTimeField(auto_now=True, null=True, verbose_name='Atualizado em:')),
                ('ativo', models.CharField(choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], default='SIM', max_length=3, verbose_name='Ativo?')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('inserido', models.DateTimeField(auto_now_add=True, verbose_name='Inserido em:')),
                ('inserido_por', models.CharField(max_length=100)),
                ('num_unidade', models.IntegerField(unique=True)),
                ('sigla_unidade', models.CharField(max_length=10, unique=True)),
                ('nome_unidade', models.CharField(max_length=100, unique=True)),
                ('superintendente', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Tabela de Unidade',
                'verbose_name_plural': 'Tabela de Unidades',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notificacoes', models.BooleanField(default=True, verbose_name='Receber Notificações?')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, upload_to='users/%Y/%m/%d/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tabela de Perfil',
                'verbose_name_plural': 'Tabela de Perfis',
            },
        ),
    ]
